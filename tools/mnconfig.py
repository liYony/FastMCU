#!/usr/bin/env python
# -*- coding: UTF-8 -*-

import os, sys
from kconfiglib import Kconfig
from menuconfig import menuconfig
import re

def _fm_config(filename):
    try:
        config = open(filename, 'r')
    except:
        print('open config:%s failed' % filename)
        return

    fmconfig = open('fmconfig.h', 'w')
    fmconfig.write('#ifndef __FMCU_CONFIG_H__\n')
    fmconfig.write('#define __FMCU_CONFIG_H__\n\n')

    empty_line = 1

    for line in config:
        line = line.lstrip(' ').replace('\n', '').replace('\r', '')

        if len(line) == 0:
            continue

        if line[0] == '#':
            if len(line) == 1:
                if empty_line:
                    continue

                fmconfig.write('\n')
                empty_line = 1
                continue

            if line.startswith('# CONFIG_'):
                line = ' ' + line[9:]
            else:
                line = line[1:]
                if "end" in line:
                    fmconfig.write('\n/*%s */\n' % line)
                else:
                    fmconfig.write('/*%s */\n' % line)

            empty_line = 0
        else:
            empty_line = 0
            setting = line.split('=')
            if len(setting) >= 2:
                if setting[0].startswith('CONFIG_'):
                    setting[0] = setting[0][7:]

                # # remove CONFIG_PKG_XX_PATH or CONFIG_PKG_XX_VER
                # if is_pkg_special_config(setting[0]):
                #     continue

                if setting[1] == 'y':
                    fmconfig.write('#define %s\n' % setting[0])
                else:
                    fmconfig.write('#define %s %s\n' % (setting[0], re.findall(r"^.*?=(.*)$",line)[0]))

    fmconfig.write('\n')
    fmconfig.write('#endif /* __FMCU_CONFIG_H__ */\n')
    fmconfig.close()

def mconf_set_env(fm_root):
    """
    Set Kconfig Env
    """
    os.environ["MENUCONFIG_STYLE"] = "default selection=fg:white,bg:blue"
    os.environ["KCONFIG_CONFIG"] = os.path.join(".config")
    os.environ["KCONFIG_CONFIG_HEADER"] = "# Generated by FMCU Configuration\n"
    os.environ["KCONFIG_AUTOHEADER"] = os.path.join("fmconfig.h")
    os.environ["CONFIG_"] = "CONFIG_"
    os.environ['FM_ROOT_DIR'] = fm_root
    os.environ['BSP_ROOT_DIR'] = os.getcwd()

def Menuconfig(fm_root):
    mconf_set_env(fm_root)
    kconf = Kconfig(filename="./Kconfig")
    menuconfig(kconf)
    kconf.write_autoconf()
    _fm_config(".config")

