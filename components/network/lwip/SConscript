from building import *

# get current directory
cwd = GetCurrentDir()

# 1. The minimum set of files needed for lwIP.
lwipcore_SRCS = Split("""
lwip-2.1.2/src/core/init.c
lwip-2.1.2/src/core/def.c
lwip-2.1.2/src/core/dns.c
lwip-2.1.2/src/core/inet_chksum.c
lwip-2.1.2/src/core/ip.c
lwip-2.1.2/src/core/mem.c
lwip-2.1.2/src/core/memp.c
lwip-2.1.2/src/core/netif.c
lwip-2.1.2/src/core/pbuf.c
lwip-2.1.2/src/core/raw.c
lwip-2.1.2/src/core/stats.c
lwip-2.1.2/src/core/sys.c
lwip-2.1.2/src/core/tcp.c
lwip-2.1.2/src/core/tcp_in.c
lwip-2.1.2/src/core/tcp_out.c
lwip-2.1.2/src/core/timeouts.c
lwip-2.1.2/src/core/udp.c
""")

# 1.1
lwipcore_altcp_SRCS = Split("""
lwip-2.1.2/src/core/altcp.c
lwip-2.1.2/src/core/altcp_alloc.c
lwip-2.1.2/src/core/altcp_tcp.c
""")

# 1.2
lwipcore4_SRCS = Split("""
lwip-2.1.2/src/core/ipv4/autoip.c
lwip-2.1.2/src/core/ipv4/dhcp.c
lwip-2.1.2/src/core/ipv4/etharp.c
lwip-2.1.2/src/core/ipv4/icmp.c
lwip-2.1.2/src/core/ipv4/igmp.c
lwip-2.1.2/src/core/ipv4/ip4_frag.c
lwip-2.1.2/src/core/ipv4/ip4.c
lwip-2.1.2/src/core/ipv4/ip4_addr.c
""")

# 1.3
lwipcore6_SRCS = Split("""
lwip-2.1.2/src/core/ipv6/dhcp6.c
lwip-2.1.2/src/core/ipv6/ethip6.c
lwip-2.1.2/src/core/ipv6/icmp6.c
lwip-2.1.2/src/core/ipv6/inet6.c
lwip-2.1.2/src/core/ipv6/ip6.c
lwip-2.1.2/src/core/ipv6/ip6_addr.c
lwip-2.1.2/src/core/ipv6/ip6_frag.c
lwip-2.1.2/src/core/ipv6/mld6.c
lwip-2.1.2/src/core/ipv6/nd6.c
""")

# 2. APIFILES: The files which implement the sequential and socket APIs.
lwipapi_SRCS = Split("""
lwip-2.1.2/src/api/api_lib.c
lwip-2.1.2/src/api/api_msg.c
lwip-2.1.2/src/api/err.c
lwip-2.1.2/src/api/if_api.c
lwip-2.1.2/src/api/netbuf.c
lwip-2.1.2/src/api/netdb.c
lwip-2.1.2/src/api/netifapi.c
lwip-2.1.2/src/api/sockets.c
lwip-2.1.2/src/api/tcpip.c
""")

# 3. Files implementing various generic network interface functions
lwipnetif_SRCS = Split("""
lwip-2.1.2/src/netif/ethernet.c
""")

# 3.1 Files implementing an IEEE 802.1D bridge by using a multilayer netif approach
lwipnetif_bridgeif_SRCS = Split("""
lwip-2.1.2/src/netif/bridgeif.c
lwip-2.1.2/src/netif/bridgeif_fdb.c
""")

# 3.2 A generic implementation of the SLIP (Serial Line IP) protocol.
lwipnetif_slipif_SRCS = Split("""
lwip-2.1.2/src/netif/slipif.c
""")

# 4. 6LoWPAN
lwipsixlowpan_SRCS = Split("""
lwip-2.1.2/src/netif/lowpan6.c
""")

# 4.1 A 6LoWPAN over Bluetooth Low Energy (BLE) implementation as netif,
#           according to RFC-7668.
lwipsixlowpan_ble_SRCS = Split("""
lwip-2.1.2/src/netif/lowpan6_ble.c
""")

# 4.2 Common 6LowPAN routines for IPv6.
lwipsixlowpan_ipv6_SRCS = Split("""
lwip-2.1.2/src/netif/lowpan6_common.c
""")

# 4.3 A netif implementing the ZigBee Encapsulation Protocol (ZEP).
lwipsixlowpan_zep_SRCS = Split("""
lwip-2.1.2/src/netif/zepif.c
""")

src_core = []

src_core += lwipcore_SRCS
src_core += lwipcore_altcp_SRCS
src_core += lwipcore4_SRCS

src_api = []
src_api += lwipapi_SRCS

src_netif = []

src_netif += lwipnetif_SRCS
src_netif += lwipsixlowpan_SRCS

src_arch = ['port/ethernetif.c']

path = [cwd + '/lwip-2.1.2/src/include',
    cwd + '/lwip-2.1.2/src/include/netif',
    cwd + '/port']

group_core = DefineGroup('lwip/core', src_core, depend = ['NET_LWIP_ENABLE'], CPPPATH = path)
group_api = DefineGroup('lwip/api', src_api, depend = ['NET_LWIP_ENABLE'], CPPPATH = path)
group_netif = DefineGroup('lwip/netif', src_netif, depend = ['NET_LWIP_ENABLE'], CPPPATH = path)
group_arch = DefineGroup('lwip', src_arch, depend = ['NET_LWIP_ENABLE'], CPPPATH = path)

group = (group_core + group_api + group_netif + group_arch)

Return('group')
