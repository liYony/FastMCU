import os
import sys
import fmconfig

if os.getenv('FM_ROOT'):
    FM_ROOT = os.getenv('FM_ROOT')
else:
    FM_ROOT = os.path.normpath(os.getcwd() + '/../../..')

sys.path = sys.path + [os.path.join(FM_ROOT, 'tools')]
try:
    from building import *
except:
    print('Cannot found RT-Thread root directory, please check FM_ROOT')
    print(FM_ROOT)
    exit(-1)

TARGET = 'rtthread.' + fmconfig.TARGET_EXT

DefaultEnvironment(tools=[])
env = Environment(tools = ['mingw'],
    AS = fmconfig.AS, ASFLAGS = fmconfig.AFLAGS,
    CC = fmconfig.CC, CCFLAGS = fmconfig.CFLAGS,
    AR = fmconfig.AR, ARFLAGS = '-rc',
    CXX = fmconfig.CXX, CXXFLAGS = fmconfig.CXXFLAGS,
    LINK = fmconfig.LINK, LINKFLAGS = fmconfig.LFLAGS)
env.PrependENVPath('PATH', fmconfig.EXEC_PATH)

if fmconfig.PLATFORM in ['iccarm']:
    env.Replace(CCCOM = ['$CC $CCFLAGS $CPPFLAGS $_CPPDEFFLAGS $_CPPINCFLAGS -o $TARGET $SOURCES'])
    env.Replace(ARFLAGS = [''])
    env.Replace(LINKCOM = env["LINKCOM"] + ' --map rtthread.map')

Export('FM_ROOT')
Export('fmconfig')

SDK_ROOT = os.path.abspath('./')

if os.path.exists(SDK_ROOT + '/libraries'):
    libraries_path_prefix = SDK_ROOT + '/libraries'
else:
    libraries_path_prefix = os.path.dirname(SDK_ROOT) + '/libraries'

SDK_LIB = libraries_path_prefix
Export('SDK_LIB')

# prepare building environment
objs = PrepareBuilding(env, FM_ROOT, has_libcpu=False)

hc32_library = 'hc32f4a0_ddl'
fmconfig.BSP_LIBRARY_TYPE = hc32_library

# include libraries
objs.extend(SConscript(os.path.join(libraries_path_prefix, hc32_library, 'SConscript')))

# include drivers
objs.extend(SConscript(os.path.join(libraries_path_prefix, 'hc32_drivers', 'SConscript')))

# objs.extend(SConscript(os.path.join(os.getcwd(), 'board', 'ports', 'SConscript')))

# make a building
DoBuilding(TARGET, objs)
